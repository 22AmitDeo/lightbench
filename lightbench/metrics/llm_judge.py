import os

from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")


class LLMJudge:
    def __init__(self, judge_model_name="gpt-4o-mini"):
        self.client = OpenAI(api_key=OPENAI_API_KEY)
        self.judge_model_name = judge_model_name

    def get_score(self, prompt, response, max_attempts = 2):
        attempts = 0
        while attempts < max_attempts:
            llm_judge_response = self.client.chat.completions.create(
                model=self.judge_model_name,
                messages=[
                    {"role": "system", "content": "You are a text evaluator that evaluates text generated by large language models. \
                                                You will be given the prompt that was given to the large language model (denoted with 'PROMPT') and the answer generated by the model (denoted with 'RESPONSE TO EVALUATE'). \
                                                Label text with a score from 1 to 10. 1 being very bad and 10 being perfect.\
                                                Answer only with one number, nothing else. Just and integer: 1, 2, 3, 4, 5, 6, 7, 8, 9, or 10."},
                    {
                        "role": "user",
                        "content": f"PROMPT: {prompt}. RESPONSE TO EVALUATE:\n{response}"
                    }
                ],
                max_tokens=1,
            )
            score = llm_judge_response.choices[0].message.content
            if score.isdigit():
                if (1 <= int(score) <= 10): return int(score)
            attempts += 1
        return 0